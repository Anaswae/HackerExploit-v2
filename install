#/bin/bash
LPARTH=`pwd`
chmod 777 *
# REQUIREMENT INFO GEDARING 
clear



RED=$'\e[1;31m'
GREEN=$'\e[1;32m'
YELLOW=$'\e[1;33m'
BLUE=$'\e[1;34m'
RESTORE=$'\e[0m'
chmod 777 *


clear
#logo or name
	echo "${GREEN} WELCOME TO The ${RESTORE}"
	echo "${RESTORE}"
	echo "${YELLOW}"

echo "                                                                                                          "     
echo " ██╗  ██╗ █████╗  ██████╗██╗  ██╗███████╗██████╗     ███████╗██╗  ██╗██████╗ ██╗      ██████╗ ██╗████████╗"
echo " ██║  ██║██╔══██╗██╔════╝██║ ██╔╝██╔════╝██╔══██╗    ██╔════╝╚██╗██╔╝██╔══██╗██║     ██╔═══██╗██║╚══██╔══╝"
echo " ███████║███████║██║     █████╔╝ █████╗  ██████╔╝    █████╗   ╚███╔╝ ██████╔╝██║     ██║   ██║██║   ██║   "
echo " ██╔══██║██╔══██║██║     ██╔═██╗ ██╔══╝  ██╔══██╗    ██╔══╝   ██╔██╗ ██╔═══╝ ██║     ██║   ██║██║   ██║   "
echo " ██║  ██║██║  ██║╚██████╗██║  ██╗███████╗██║  ██║    ███████╗██╔╝ ██╗██║     ███████╗╚██████╔╝██║   ██║   "
echo " ╚═╝  ╚═╝╚═╝  ╚═╝ ╚═════╝╚═╝  ╚═╝╚══════╝╚═╝  ╚═╝    ╚══════╝╚═╝  ╚═╝╚═╝     ╚══════╝ ╚═════╝ ╚═╝   ╚═╝   "
echo "                                                                                                          "
egrep -i ver he2dat;

echo "${RESTORE}"
echo "${RED}=============================================================================================================="
echo "${RESTORE}"

# check internet
echo "Checking For Internet ${BLUE} CONNECTION >>>" 

clear
echo "                                                                                                          "     
echo " ██╗  ██╗ █████╗  ██████╗██╗  ██╗███████╗██████╗     ███████╗██╗  ██╗██████╗ ██╗      ██████╗ ██╗████████╗"
echo " ██║  ██║██╔══██╗██╔════╝██║ ██╔╝██╔════╝██╔══██╗    ██╔════╝╚██╗██╔╝██╔══██╗██║     ██╔═══██╗██║╚══██╔══╝"
echo " ███████║███████║██║     █████╔╝ █████╗  ██████╔╝    █████╗   ╚███╔╝ ██████╔╝██║     ██║   ██║██║   ██║   "
echo " ██╔══██║██╔══██║██║     ██╔═██╗ ██╔══╝  ██╔══██╗    ██╔══╝   ██╔██╗ ██╔═══╝ ██║     ██║   ██║██║   ██║   "
echo " ██║  ██║██║  ██║╚██████╗██║  ██╗███████╗██║  ██║    ███████╗██╔╝ ██╗██║     ███████╗╚██████╔╝██║   ██║   "
echo " ╚═╝  ╚═╝╚═╝  ╚═╝ ╚═════╝╚═╝  ╚═╝╚══════╝╚═╝  ╚═╝    ╚══════╝╚═╝  ╚═╝╚═╝     ╚══════╝ ╚═════╝ ╚═╝   ╚═╝   "
echo "                                                                                                          "
egrep -i ver he2dat;

echo "${RESTORE}"
echo "${RED}=============================================================================================================="
echo "${RESTORE}"


echo "${YELLOW}"
function checkinternet() 
{
  ping -c 1 google.com > /dev/null 2>&1
  if [[ "$?" != 0 ]]
  then
    echo -e " Checking For Internet Connection:${RED} FAILED ${YELLOW}"
    echo
    echo -e "This framework Needs An Active Internet Connection"
    echo
    echo -e " WH-HackerExploit >> Exit"
    echo && sleep 2
    exit
  else
    echo -e "Internet Status : ${GREEN} CONNECTED"
  fi
}
checkinternet

sleep 3;

sudo apt-get install unzip -y


echo ""
echo "${YELLOW}[*]Downloading main Framwork PKG ${GREEN}(75.1 MB)"
wget https://github.com/wh-hackerexploit/hw2pkgmain/archive/master.zip | zenity --progress --pulsate --title "☠ PLEASE WAIT ☠" --text="Downloading - Framework PKG" --percentage=0 --auto-close --width 300 > /dev/null 2>&1
#wget https://github.com/wh-hackerexploit/hw2pkgmain/archive/master.zip 2>&1 | sed -u 's/.* \([0-9]\+%\)\ \+\([0-9.]\+.\) \(.*\)/\1\n# Downloading at \2\/s, ETA \3/' | zenity --progress --title="Downloading PKG File..." 

#Start a loop testing if zenity is running, and if not kill wget
#RUNNING=0
#while [ $RUNNING -eq 0 ]
#do
#if [ -z "$(pidof zenity)" ]
#then
#  pkill wget
#  RUNNING=1
#fi
#done

unzip -x $LPARTH/master.zip
mv $LPARTH/hw2pkgmain-master/HEv2.zip $LPARTH/
unzip -x $LPARTH/HEv2.zip
rm -rf $LPARTH/hw2pkgmain-master
rm -rf $LPARTH/master.zip
chmod 777 *




sudo firefox https://dashboard.ngrok.com/get-started 
echo "Please insurt your NGROK TOKEN "
read -p ' HE :~' NGtoken

################################













sudo apt-get update -y
sudo apt-get full-upgrade -y
apt-get install tor -y

sudo apt-get install sleep -y
rm -rf /usr/bin/apktool
rm -rf /usr/bin/apktool.jar
sleep 1;

cp $LPARTH/apktool/apktool /usr/bin/apktool
sleep 1.2;
cp $LPARTH/apktool/apktool.jar /usr/bin/apktool.jar


#install these packages using command :
sudo dpkg -i $LPARTH/bin/*.deb

#if it shows dependencies then use command :
sudo apt-get install -f

#and again install
sudo dpkg -i $LPARTH/bin/*.deb


sudo dpkg --add-architecture i386 && apt-get update && apt-get install wine32 -y





sudo apt-get install mpv -y






apt-get install figlet

apt-get install cat



sudo apt-get install openjdk-8-jre -y
sudo apt --fix-broken install -y

sudo apt-get install default-jdk -y
sudo apt-get install default-jre -y
sudo apt-get install zipalign -y
sudo apt-get install python3-pip -y
python3.7 -m pip install -r $LPARTH/requirements.txt -y
apktool empty-framework-dir --force -y

apt-get update && apt-get full-upgrade -y



sleep 2;






cp $LPARTH/bin/ngrok.zip $LPARTH/
 
unzip $LPARTH/ngrok.zip

$LPARTH/ngrok authtoken $NGtoken

rm -rf $LPARTH/ngrok.zip



apt-get install powershell -y

sudo apt-get install zenity -y

apt-get install wine -y
# search for: '.wine/drive_c/Program Files' folder ..
if [ -e "$HoME/.wine/drive_c/$PgFi" ]; then
  echo ${BlueFb1}[☆]${whitew1}" Wine $PgFi   : ${GreenFg1}found!"${Resetr1};
  sleep 1
else
  FaIl="YES"
  echo ${RedFr1}[x]${whitew1} Wine: $PgFi '->' not found!${Resetr1};
  sleep 2
  echo ${GreenFg1}[☆]${whitew1} Please wait, trying to build required folders ..!${Resetr1};
  winecfg > /dev/null 2>&1
  echo ""
  echo ${RedFr1}Listing drive_c directorys: ${Resetr1};
  ls $HoME/.wine/drive_c
  echo ""
fi

sudo python3.7 -m pip install -r requirements.txt


clear 

sudo apt-get update -y
sudo apt-get full-upgrade -y
apt-get install tor -y

sudo apt-get install sleep -y
rm -rf /usr/bin/apktool
rm -rf /usr/bin/apktool.jar
sleep 1;

cp $LPARTH/apktool/apktool /usr/bin/apktool
sleep 1.2;
cp $LPARTH/apktool/apktool.jar /usr/bin/apktool.jar


#install these packages using command :
sudo dpkg -i $LPARTH/bin/*.deb

#if it shows dependencies then use command :
sudo apt-get install -f

#and again install
sudo dpkg -i $LPARTH/bin/*.deb


sudo dpkg --add-architecture i386 && apt-get update && apt-get install wine32 -y





sudo apt-get install mpv -y






apt-get install figlet

apt-get install cat

sudo apt-get install unzip -y


sudo apt-get install openjdk-8-jre -y
sudo apt --fix-broken install -y

sudo apt-get install default-jdk -y
sudo apt-get install default-jre -y
sudo apt-get install zipalign -y
sudo apt-get install python3-pip -y
python3.7 -m pip install -r $LPARTH/requirements.txt -y
apktool empty-framework-dir --force -y

apt-get update && apt-get full-upgrade -y


unzip $LPARTH/ngrok.zip

$LPARTH/ngrok authtoken $NGtoken




apt-get install powershell -y

sudo apt-get install zenity -y

apt-get install wine -y
# search for: '.wine/drive_c/Program Files' folder ..
if [ -e "$HoME/.wine/drive_c/$PgFi" ]; then
  echo ${BlueFb1}[☆]${whitew1}" Wine $PgFi   : ${GreenFg1}found!"${Resetr1};
  sleep 1
else
  FaIl="YES"
  echo ${RedFr1}[x]${whitew1} Wine: $PgFi '->' not found!${Resetr1};
  sleep 2
  echo ${GreenFg1}[☆]${whitew1} Please wait, trying to build required folders ..!${Resetr1};
  winecfg > /dev/null 2>&1
  echo ""
  echo ${RedFr1}Listing drive_c directorys: ${Resetr1};
  ls $HoME/.wine/drive_c
  echo ""
fi

sudo python3.7 -m pip install -r requirements.txt

rm -rf $LPARTH/HEv2.zip





#--------UPGRADE----------
apt autoremove

cp $LPARTH/WHE2.sh $LPARTH/bin/reinstll.sh

sleep 1.2;
cp $LPARTH/bin/upgrade.sh $LPARTH/run
sleep 1;
cp $LPARTH/bin/upgrade.sh $LPARTH/whe2
chmod 777 *
rm -rf $LPARTH/WHE2.sh












clear
#logo or name
	echo "${GREEN} WELCOME TO The ${RESTORE}"
	echo "${RESTORE}"
	echo "${YELLOW}"

echo "                                                                                                          "     
echo " ██╗  ██╗ █████╗  ██████╗██╗  ██╗███████╗██████╗     ███████╗██╗  ██╗██████╗ ██╗      ██████╗ ██╗████████╗"
echo " ██║  ██║██╔══██╗██╔════╝██║ ██╔╝██╔════╝██╔══██╗    ██╔════╝╚██╗██╔╝██╔══██╗██║     ██╔═══██╗██║╚══██╔══╝"
echo " ███████║███████║██║     █████╔╝ █████╗  ██████╔╝    █████╗   ╚███╔╝ ██████╔╝██║     ██║   ██║██║   ██║   "
echo " ██╔══██║██╔══██║██║     ██╔═██╗ ██╔══╝  ██╔══██╗    ██╔══╝   ██╔██╗ ██╔═══╝ ██║     ██║   ██║██║   ██║   "
echo " ██║  ██║██║  ██║╚██████╗██║  ██╗███████╗██║  ██║    ███████╗██╔╝ ██╗██║     ███████╗╚██████╔╝██║   ██║   "
echo " ╚═╝  ╚═╝╚═╝  ╚═╝ ╚═════╝╚═╝  ╚═╝╚══════╝╚═╝  ╚═╝    ╚══════╝╚═╝  ╚═╝╚═╝     ╚══════╝ ╚═════╝ ╚═╝   ╚═╝   "
echo "                                                                                                          "
egrep -i ver he2dat;

echo "${RESTORE}"
echo "${RED}=============================================================================================================="
echo "${RESTORE}"

echo "${YELLOW}[*] framework PKG install completed${GREEN} successfully .${RESTORE}"

echo ""
echo "${YELLOW}[*] RUN framework with ${GREEN} (bash run / bash whe2)${RESTORE}"

echo "${YELLOW}[*] Press enter to Run WH2/(WH-HackerExploit v2) framework ${GREEN}V-2.0.1 .${RESTORE}"
read whenter
bash $LPARTH/whe2
